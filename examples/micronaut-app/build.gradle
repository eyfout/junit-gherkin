plugins {
    id("org.jetbrains.kotlin.jvm") version "1.9.25"
    id("org.jetbrains.kotlin.plugin.allopen") version "1.9.25"

    id("com.google.devtools.ksp") version "1.9.25-1.0.20"
    id("com.github.johnrengelman.shadow") version "8.1.1"
    id("io.micronaut.application") version "4.4.2"
    id("ht.eyfout.junit.gherkin") version "0.0.1"
//    id("io.micronaut.aot") version "4.4.2"
}

dependencies {

    ksp("io.micronaut:micronaut-http-validation")
    ksp("io.micronaut.serde:micronaut-serde-processor")
    implementation("io.micronaut.kotlin:micronaut-kotlin-runtime")
    implementation("io.micronaut.serde:micronaut-serde-jackson")
    implementation("org.jetbrains.kotlin:kotlin-reflect:${kotlinVersion}")
    implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8:${kotlinVersion}")
    compileOnly("io.micronaut:micronaut-http-client")
    runtimeOnly("ch.qos.logback:logback-classic")
    runtimeOnly("com.fasterxml.jackson.module:jackson-module-kotlin")
    implementation("ht.eyfout.junit:junit-gherkin:0.0.1")
    implementation("ht.eyfout.junit:gherkin-http-provider:0.0.1")
    implementation("ht.eyfout.junit:gherkin-http-api-generator:0.0.1")

    testImplementation("ht.eyfout.junit:junit-gherkin:0.0.1")
    testImplementation("ht.eyfout.junit:gherkin-http-provider:0.0.1")

    testImplementation("io.micronaut:micronaut-http-client")
//    testImplementation(project(":libraries:gherkin-http-provider"))
//    testImplementation(project(":libraries:junit-gherkin"))
    testImplementation libs.mockk
    testImplementation libs.rest.assured
    testImplementation libs.jakarta.inject.api

}


sourceSets {
    main{
        java{
            srcDir "$buildDir/generated/sources"
        }
    }
}
genGherkinHttpAPI{
    mustRunAfter(tasks.compileJava)
    specification = layout.projectDirectory.file("src/main/resources/junit-gherkin/pets.yml").asFile
    out = layout.buildDirectory.dir('generated/sources').get().asFile
}

application {
    mainClass = "ht.eyfout.example.ApplicationKt"
}
java {
    sourceCompatibility = JavaVersion.toVersion("18")
}


graalvmNative.toolchainDetection = false

micronaut {
    runtime("netty")
    testRuntime("junit5")
    processing {
        incremental(true)
        annotations("ht.eyfout.example.*")
    }
//    aot {
//        // Please review carefully the optimizations enabled below
//        // Check https://micronaut-projects.github.io/micronaut-aot/latest/guide/ for more details
//        optimizeServiceLoading = false
//        convertYamlToJava = false
//        precomputeOperations = true
//        cacheEnvironment = true
//        optimizeClassLoading = true
//        deduceEnvironment = true
//        optimizeNetty = true
//        replaceLogbackXml = true
//    }
}



