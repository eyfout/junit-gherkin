plugins {
    id("org.jetbrains.kotlin.jvm") version "1.9.25"
    id("org.jetbrains.kotlin.plugin.allopen") version "1.9.25"


    id("com.google.devtools.ksp") version "1.9.25-1.0.20"
    id("com.github.johnrengelman.shadow") version "8.1.1"
    id("io.micronaut.application") version "4.4.2"
    id("ht.eyfout.openapi.http.api") version "0.0.1-SNAPSHOT"
//    id("io.micronaut.aot") version "4.4.2"
}

dependencies {
    annotationProcessor("io.micronaut.openapi:micronaut-openapi")
    ksp("io.micronaut.openapi:micronaut-openapi")
    ksp("io.micronaut.openapi:micronaut-openapi-annotations")
    ksp("io.micronaut:micronaut-http-validation")
    ksp("io.micronaut.serde:micronaut-serde-processor")
    implementation("io.micronaut.kotlin:micronaut-kotlin-runtime")
    implementation("io.micronaut.serde:micronaut-serde-jackson")
    implementation("org.jetbrains.kotlin:kotlin-reflect:${kotlinVersion}")
    implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8:${kotlinVersion}")
    compileOnly("io.micronaut:micronaut-http-client")
    compileOnly("io.micronaut.openapi:micronaut-openapi-annotations")
    runtimeOnly("ch.qos.logback:logback-classic")
    runtimeOnly("com.fasterxml.jackson.module:jackson-module-kotlin")

    implementation libs.junit.gherkin
    implementation libs.gherkin.http.api
    implementation libs.gherkin.http

    testImplementation("io.micronaut:micronaut-http-client")
    testImplementation libs.mockk
    testImplementation libs.rest.assured
    testImplementation libs.jakarta.inject.api
    testImplementation(platform("org.junit:junit-bom:5.11.2"))
    testImplementation("org.junit.jupiter:junit-jupiter")

    implementation project.files(project.layout.buildDirectory.file("generated/junit-gherkin/main/classes"))
    testImplementation project.files(project.layout.buildDirectory.file("generated/junit-gherkin/test/classes"))
}

application {
    mainClass = "ht.eyfout.example.Application"
}
java {
    sourceCompatibility = JavaVersion.toVersion("18")
}

tasks.configureEach { task ->
    if(task.name == "kspKotlin"){
        task.incremental=false
        task.dependsOn(tasks.named("openapiHttpAPI"))
    }
}

test {
    useJUnitPlatform {
        includeEngines("junit-jupiter")
    }
}

graalvmNative.toolchainDetection = false

micronaut {
    runtime("netty")
    testRuntime("junit5")
    processing {
        incremental(true)
        annotations("ht.eyfout.example.*")
    }
//    aot {
//        // Please review carefully the optimizations enabled below
//        // Check https://micronaut-projects.github.io/micronaut-aot/latest/guide/ for more details
//        optimizeServiceLoading = false
//        convertYamlToJava = false
//        precomputeOperations = true
//        cacheEnvironment = true
//        optimizeClassLoading = true
//        deduceEnvironment = true
//        optimizeNetty = true
//        replaceLogbackXml = true
//    }
}